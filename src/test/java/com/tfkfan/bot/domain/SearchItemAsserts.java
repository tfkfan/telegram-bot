package com.tfkfan.bot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SearchItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchItemAllPropertiesEquals(SearchItem expected, SearchItem actual) {
        assertSearchItemAutoGeneratedPropertiesEquals(expected, actual);
        assertSearchItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchItemAllUpdatablePropertiesEquals(SearchItem expected, SearchItem actual) {
        assertSearchItemUpdatableFieldsEquals(expected, actual);
        assertSearchItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchItemAutoGeneratedPropertiesEquals(SearchItem expected, SearchItem actual) {
        assertThat(expected)
            .as("Verify SearchItem auto generated properties")
            .satisfies(e -> assertThat(e.href).as("check id").isEqualTo(actual.href));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchItemUpdatableFieldsEquals(SearchItem expected, SearchItem actual) {
        assertThat(expected)
            .as("Verify SearchItem relevant properties")
            .satisfies(e -> assertThat(e.title).as("check title").isEqualTo(actual.title))
            .satisfies(e -> assertThat(e.img).as("check img").isEqualTo(actual.img))
            .satisfies(e -> assertThat(e.price).as("check price").isEqualTo(actual.price))
            .satisfies(e -> assertThat(e.href).as("check href").isEqualTo(actual.href));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchItemUpdatableRelationshipsEquals(SearchItem expected, SearchItem actual) {}
}
